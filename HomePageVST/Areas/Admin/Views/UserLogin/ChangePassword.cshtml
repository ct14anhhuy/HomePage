@model DTO.UserLoginDTO
@using HomePageVST.Extensions.AntiModelInjection

@{
    ViewBag.Title = "ChangePassword";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Change Password</h4>
        <br />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.AntiModelInjectionFor(x => x.Id)
        @Html.AntiModelInjectionFor(x => x.UserName)
        @Html.AntiModelInjectionFor(x => x.RoleId)
        @Html.AntiModelInjectionFor(x => x.CreatedAt)
        @Html.AntiModelInjectionFor(x => x.IsActive)

        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.UserName)
        @Html.HiddenFor(model => model.RoleId)
        @Html.HiddenFor(model => model.CreatedAt)
        @Html.HiddenFor(model => model.IsActive)

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-2">
                @Html.PasswordFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NewPassword, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-2">
                @Html.PasswordFor(model => model.NewPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmNewPassword, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-2">
                @Html.PasswordFor(model => model.ConfirmNewPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmNewPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-1 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", "Recruitment")
</div>

@section footerJs {
    @if (ViewBag.PasswordChanged != null)
    {
        <script>
            alert("Password changed, you will redirect to login page!");
            window.location.replace("/login.html");
        </script>
    }
}